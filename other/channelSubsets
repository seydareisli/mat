% This code creates channel subsets that are evenly distributed across scalp
% Useful for High Density EEG Data - subsets could be analyzed separately
% Part 1. reject channels with kurtosis values of more than 3  
% Part 2. create evenly spaced channel subsets from remaining channels by:
%       2.1. creating bundles of neigbouring channels starting from periphery
%       2.2. forming channel subsets by taking one channel from each bundle  

% Author: Seydanur Tikir (stikir@mail.einstein.yu.edu)
% Created on: 12/16/2018. Under construction.

eeglab; clear; clc;
paths; load_path=path3; save_path=path4; 

for i = 1:numel(group) %loop through subject groups
    
    id = dir([load_path,group{i}]); id(1:3) = []; % Get all subject IDs
    
    for j = 1:size(id,1) %loop through subjects
        fprintf('Subject: %s\n',id(j).name); 
        subject_load_path = [load_path,group{i},'/',id(j).name,'/'];
             
        % PART 1: Rejections
        EEG = pop_loadset([id(j).name,'.set'],subject_load_path);
        EEG = pop_select(EEG,'nochannel',{'RH','LH','RTM','LTM','RBM','LBM','Nas','Snas'}); 
        EEG = pop_rejchan(EEG, 'elec',[1: EEG.nbchan] ,'threshold',3,'norm','on','measure','kurt');
        
        % PART 2: Finding subsets of channels 
        numChanSubsets=5;
        channels={EEG.chanlocs.labels}; X=[EEG.chanlocs.X]; Y=[EEG.chanlocs.Y]; Z=[EEG.chanlocs.Z]; 
        numSections=floor((length(channels)-1)/numChanSubsets);%-1 for the most central channel, which will be present in all subsets
        chanSections=cell(numChanSubsets,numSections+1); %empty cell array. each column is a section; each row is a channel subset
        
        centralChan=channels(find(Z==max(Z))); %usually Cz, if not rejected
        for n=1:numSections
            myChan=find(Z==min(Z)); %start from the most peripheral channel
            for c=1:length(channels) %calculate its distance to all other channels
                dis(c)=((X(myChan)-X(c))^2+(Y(myChan)-Y(c))^2+(Z(myChan)-Z(c))^2)^0.5; 
            end
            [temp,I]=sort(dis); clear temp dis %sort the distance matrix
            for g=1:numChanSubsets
                chanSections{g,n} = channels(I(g)); %create bundles/sections of neighbouring channels
                chanSections{g,numSections+1} = centralChan; %include the most central channel in all channel subsets
            end
            channels(I(1:numChanSubsets))=[]; X(I(1:numChanSubsets))=[]; Y(I(1:numChanSubsets))=[]; Z(I(1:numChanSubsets))=[]; %remove bundled channels from list and go to next peripheral channel. 
        end
 

        EEGAll = EEG;
        for k=1:numChanSubsets %loop through channel subsets
            evenSubset=[chanSections{k,:}]; %takes one channelf rom each bundle
            EEG = pop_select( EEGAll,'channel',evenSubset); %select channels for current sample
            figure; topoplot([],EEG.chanlocs, 'electrodes', 'labelpoint'); %plot channel locations
            mkdir([save_path, group{i},'/',id(j).name,'/',id(j).name,'subset', num2str(k)]); %create a subset folder 
            subset_save_path= [save_path, group{i},'/',id(j).name,'/',id(j).name,'subset', num2str(k)]
            pop_saveset( EEG, [id(j).name,'subset', num2str(k)], subset_save_path);
            clear EEG;
        end
              
    end
    
end
 
   
